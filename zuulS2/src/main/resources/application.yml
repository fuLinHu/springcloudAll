server:
  port: 8887


eureka:
  instance:
    hostname: localhost
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
spring:
  application:
    name: zuul
zuul:
  ignored-services: custom #忽略微服务 custom 但如果配置zuul.routes  则该下的微服务将不被忽略 因为zuul.routes=custom 则custom将不被葫忽略
  routes:
    ##也就是 当访问的地址为http://localhost:8884/u/...时才能映射到微服务custom上
    #eg：http://localhost:8884/u/custom/user?userName=%27flh%27&age=10
    #映射到 http://localhost:8880/custom/user?userName=%27flh%27&age=10 上
    #8880为微服务custom的端口号
    custom:
      path: /u/**
      sensitiveHeaders: Cookie #说明：敏感的header不会传播到下游去，也就是说此处的Cookie不会传播的其它的微服务中去
  ignored-headers: Authorization #说明：忽略的header不会传播到下游去，也就是说此处的Authorization不会传播的其它的微服务中去，作用与上面敏感的Header差不多，事实上sensitive-headers会被添加到ignored-headers中。
  #注意：
  #1、默认情况下zuul.ignored-headers是空的
  #2、如果Spring Security在项目的classpath中，那么zuul.ignored-headers的默认值就是Pragma,Cache-Control,X-Frame-Options,X-Content-Type-Options,X-XSS-Protection,Expires，
  #所以，当Spring Security在项目的classpath中，同时又需要使用下游微服务的Spring Security的Header时，可以将zuul.ignoreSecurity-Headers设置为false
  host:
    connect-timeout-millis: 60000
    socket-timeout-millis: 60000
    max-total-connections: 500
    max-per-route-connections: 500
logging:
  level:
    com.netflix: debug

#一下配置  是解决上传大文件超时的问题
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 60000
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  eureka:
    enabled: true
